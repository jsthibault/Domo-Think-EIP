group = "domothink.io"
project.version = "1.0.0"

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.5.0'

        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.3'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        jcenter()
    }
}

apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'

android {
    compileSdkVersion 23
    buildToolsVersion '23.0.0'
    sourceSets {
        main {
            manifest.srcFile 'app/src/main/AndroidManifest.xml'
        }
    }
    defaultConfig {
        minSdkVersion 17
        targetSdkVersion 23
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
    }

        // Rename the aar correctly
    libraryVariants.all { variant ->
        variant.outputs.each { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.aar')) {
                def fileName = "${project.name}-${variant.baseName}-${version}.aar"
                output.outputFile = new File(outputFile.parent, fileName)
            }
        }
    }
}

ext {
    swagger_annotations_version = "1.5.0"
    gson_version = "2.3.1"
    httpclient_version = "4.3.3"
    junit_version = "4.8.1"
}

dependencies {
    compile "io.swagger:swagger-annotations:$swagger_annotations_version"
    compile 'com.squareup.okhttp:okhttp:2.4.0'
    compile 'com.loopj.android:android-async-http:1.4.9'
    /*    compile ("org.apache.httpcomponents:httpmime:4.5.2"){
        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
    }
    compile ("org.apache.httpcomponents:httpcore:4.4.4"){
        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
    }*/
    testCompile "junit:junit:$junit_version"
}

afterEvaluate {
    android.libraryVariants.all { variant ->
        def task = project.tasks.create "jar${variant.name.capitalize()}", Jar
        task.description = "Create jar artifact for ${variant.name}"
        task.dependsOn variant.javaCompile
        task.from variant.javaCompile.destinationDir
        task.destinationDir = project.file("${project.buildDir}/outputs/jar")
        task.archiveName = "${project.name}-${variant.baseName}-${version}.jar"
        artifacts.add('archives', task);
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

artifacts {
    archives sourcesJar
}
